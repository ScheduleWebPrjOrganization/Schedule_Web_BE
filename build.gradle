plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
}

group = 'ac.su'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl // 추가된 부분
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
//    implementation 'org.springframework.boot:spring-boot-starter-security'  귀찮으니까 뺄게요!!
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
//    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'  귀찮으니까 뺄게요!!


    // feature/report branch 작업을 위한 의존성 추가 부분
    runtimeOnly 'mysql:mysql-connector-java'    // mysql localhost 연결을 위한 의존성 추가
    testImplementation 'org.springframework.boot:spring-boot-starter-test'  // 테스트를 위한 의존성 추가
    testImplementation 'org.mockito:mockito-core:5.11.0'// mockito 를 사용하기 위한 의존성 추가
    implementation 'mysql:mysql-connector-java:8.0.32'
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation 'com.h2database:h2'
    // 여기까지

    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:2.7.2'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}

tasks.named('test') {
    useJUnitPlatform()
}